{
    "name": "@sebastienrousseau/skeletonic-stylus",
    "// name": " --- skeletonic-stylus --- ",
    "version": "1.1.3",
    "description": "A lightweight, intuitive, accessible and ultra-responsive Stylus Library to streamline your digital and mobile web development needs. Proudly made with Stylus ❤",
    "keywords": [
        "css",
        "mit-license",
        "open-source",
        "preprocessor",
        "skeletonic-css",
        "skeletonic-stylus",
        "stylus-css",
        "stylus-mixin",
        "stylus"
    ],
    "main": "src/stylus/skeletonic.styl",
    "style": "dist/css/core/skeletonic.min.css",
    "filename": "dist/css/core/skeletonic.css",
    "repository": "git+https://github.com/sebastienrousseau/skeletonic-stylus.git",
    "author": {
        "name": "Sebastien Rousseau",
        "email": "hello@skeletonicstylus.com",
        "url": "https://skeletonicstylus.com"
    },
    "license": "MIT",
    "license_URI": "http://www.opensource.org/licenses/mit-license.php",
    "bugs": {
        "url": "https://github.com/sebastienrousseau/skeletonic-stylus/issues"
    },
    "homepage": "https://skeletonicstylus.com",
    "publishConfig": {
      "registry": "https://npm.pkg.github.com"
    },
    "autoupdate": {
        "source": "git",
        "target": "git://github.com/sebastienrousseau/skeletonic-stylus.git",
        "fileMap": [
            {
                "basePath": "dist",
                "files": [
                    "**/*"
                ]
            }
        ]
    },
    "engines": {
        "node": ">=10"
    },
    "scripts": {
        "// Build": " --- Build Scripts --- ",
        "build": "npm run dev:generate:skeletonic-library && npm run dev:copy:stylus && npm run dev:copy:readme && npm run dev:copy:logo && cat ./package.json | grep -v '\"private\":' > dist/package.json && npm pack ./dist",
        "// Skeletonic CSS Library": " --- Development Scripts --- ",
        "dev:generate:skeletonic-library": "rm -rf dist && npm run dev:generate:animations && npm run dev:generate:fonts && npm run dev:generate:hebrew-fonts && npm run dev:generate:material && npm run dev:generate:tachyons && npm run dev:generate:websafe && npm run dev:generate:skeletonic && npm run dev:filesizes:package",
        "// Skeletonic CSS Animations": " --- Development Scripts --- ",
        "dev:generate:animations": "npm run dev:format:animations && npm run dev:lint:animations && npm run dev:create:animations && npm run dev:prettier:animations && npm run dev:autoprefixer:animations && npm run dev:minimize:animations && npm run dev:filesizes:animations",
        "dev:format:animations": "stylus-supremacy format ./src/stylus/animations/**/*.styl --options .stylelintrc.json > ./debug/animations-output.log &",
        "dev:lint:animations": "stylint ./src/stylus/animations/**/*.styl --strict --fix",
        "dev:create:animations": "stylus ./src/stylus/animations/_contents.styl -o ./dist/css/animations/skeletonic-animations.css",
        "dev:prettier:animations": "prettier --write \"dist/css/animations/skeletonic-animations.css\" && stylelint \"dist/css/animations/skeletonic-animations.css\" --fix",
        "dev:autoprefixer:animations": "postcss -u autoprefixer --verbose --no-map.inline --autoprefixer.browsers \"last 1 versions\" dist/css/animations/skeletonic-animations.css -r",
        "dev:minimize:animations": "find dist/css/animations/ -iname '*.css' -and -not -iname '*.min.css' -exec sh -c 'node_modules/csso-cli/bin/csso {} --stat --output ${0%.css}.min.css' {} \\;",
        "dev:filesizes:animations": "filesizes dist/css/animations/ > dist/css/animations/skeletonic-animations-report.txt",
        "// Skeletonic CSS Fonts": " --- Development Scripts --- ",
        "dev:generate:fonts": "npm run dev:format:fonts && npm run dev:lint:fonts && npm run dev:create:fonts && npm run dev:prettier:fonts && npm run dev:autoprefixer:fonts && npm run dev:minimize:fonts && npm run dev:filesizes:fonts",
        "dev:format:fonts": "stylus-supremacy format ./src/stylus/fonts/open-sans.styl --options .stylelintrc.json > ./debug/fonts-output.log &",
        "dev:lint:fonts": "stylint ./src/stylus/fonts/open-sans.styl --strict --fix",
        "dev:create:fonts": "stylus ./src/stylus/fonts/open-sans.styl -o ./dist/css/fonts/skeletonic-fonts.css",
        "dev:prettier:fonts": "prettier --write \"dist/css/fonts/skeletonic-fonts.css\" && stylelint \"dist/css/fonts/skeletonic-fonts.css\" --fix",
        "dev:autoprefixer:fonts": "postcss -u autoprefixer --verbose --no-map.inline --autoprefixer.browsers \"last 1 versions\" dist/css/fonts/skeletonic-fonts.css -r",
        "dev:minimize:fonts": "find dist/css/fonts/ -iname '*.css' -and -not -iname '*.min.css' -exec sh -c 'node_modules/csso-cli/bin/csso {} --stat --output ${0%.css}.min.css' {} \\;",
        "dev:filesizes:fonts": "filesizes dist/css/fonts/ > dist/css/fonts/skeletonic-fonts-report.txt",
        "// Skeletonic CSS Hebrew Fonts": " --- Development Scripts --- ",
        "dev:generate:hebrew-fonts": "npm run dev:format:hebrew-fonts && npm run dev:lint:hebrew-fonts && npm run dev:create:hebrew-fonts && npm run dev:prettier:hebrew-fonts && npm run dev:autoprefixer:hebrew-fonts && npm run dev:minimize:hebrew-fonts && npm run dev:filesizes:hebrew-fonts",
        "dev:format:hebrew-fonts": "stylus-supremacy format ./src/stylus/hebrew-fonts/open-sans-hebrew.styl --options .stylelintrc.json > ./debug/hebrew-fonts-output.log &",
        "dev:lint:hebrew-fonts": "stylint ./src/stylus/hebrew-fonts/open-sans-hebrew.styl --strict --fix",
        "dev:create:hebrew-fonts": "stylus ./src/stylus/hebrew-fonts/open-sans-hebrew.styl -o ./dist/css/hebrew-fonts/skeletonic-hebrew-fonts.css",
        "dev:prettier:hebrew-fonts": "prettier --write \"dist/css/hebrew-fonts/skeletonic-hebrew-fonts.css\" && stylelint \"dist/css/hebrew-fonts/skeletonic-hebrew-fonts.css\" --fix",
        "dev:autoprefixer:hebrew-fonts": "postcss -u autoprefixer --verbose --no-map.inline --autoprefixer.browsers \"last 1 versions\" dist/css/hebrew-fonts/skeletonic-hebrew-fonts.css -r",
        "dev:minimize:hebrew-fonts": "find dist/css/hebrew-fonts/ -iname '*.css' -and -not -iname '*.min.css' -exec sh -c 'node_modules/csso-cli/bin/csso {} --stat --output ${0%.css}.min.css' {} \\;",
        "dev:filesizes:hebrew-fonts": "filesizes dist/css/hebrew-fonts/ > dist/css/hebrew-fonts/skeletonic-hebrew-fonts-report.txt",
        "// Skeletonic CSS Material Colors": " --- Development Scripts --- ",
        "dev:generate:material": "npm run dev:format:material && npm run dev:lint:material && npm run dev:create:material && npm run dev:prettier:material && npm run dev:autoprefixer:material && npm run dev:minimize:material && npm run dev:filesizes:material",
        "dev:format:material": "stylus-supremacy format ./src/stylus/palettes/material.styl --options .stylelintrc.json > ./debug/material-output.log &",
        "dev:lint:material": "stylint ./src/stylus/palettes/material.styl --strict --fix",
        "dev:create:material": "stylus ./src/stylus/palettes/material.styl -o ./dist/css/palettes/material/skeletonic-material.css",
        "dev:prettier:material": "prettier --write \"dist/css/palettes/material/skeletonic-material.css\" && stylelint \"dist/css/palettes/material/skeletonic-material.css\" --fix",
        "dev:autoprefixer:material": "postcss -u autoprefixer --verbose --no-map.inline --autoprefixer.browsers \"last 1 versions\" dist/css/palettes/material/skeletonic-material.css -r",
        "dev:minimize:material": "find dist/css/palettes/material/ -iname '*.css' -and -not -iname '*.min.css' -exec sh -c 'node_modules/csso-cli/bin/csso {} --stat --output ${0%.css}.min.css' {} \\;",
        "dev:filesizes:material": "filesizes dist/css/palettes/material/ > dist/css/palettes/material/skeletonic-material-report.txt",
        "// Skeletonic CSS Tachyons Colors": " --- Development Scripts --- ",
        "dev:generate:tachyons": "npm run dev:format:tachyons && npm run dev:lint:tachyons && npm run dev:create:tachyons && npm run dev:prettier:tachyons && npm run dev:autoprefixer:tachyons && npm run dev:minimize:tachyons && npm run dev:filesizes:tachyons",
        "dev:format:tachyons": "stylus-supremacy format ./src/stylus/palettes/tachyons.styl --options .stylelintrc.json > ./debug/tachyons-output.log &",
        "dev:lint:tachyons": "stylint ./src/stylus/palettes/tachyons.styl --strict --fix",
        "dev:create:tachyons": "stylus ./src/stylus/palettes/tachyons.styl -o ./dist/css/palettes/tachyons/skeletonic-tachyons.css",
        "dev:prettier:tachyons": "prettier --write \"dist/css/palettes/tachyons/skeletonic-tachyons.css\" && stylelint \"dist/css/palettes/tachyons/skeletonic-tachyons.css\" --fix",
        "dev:autoprefixer:tachyons": "postcss -u autoprefixer --verbose --no-map.inline --autoprefixer.browsers \"last 1 versions\" dist/css/palettes/tachyons/skeletonic-tachyons.css -r",
        "dev:minimize:tachyons": "find dist/css/palettes/tachyons/ -iname '*.css' -and -not -iname '*.min.css' -exec sh -c 'node_modules/csso-cli/bin/csso {} --stat --output ${0%.css}.min.css' {} \\;",
        "dev:filesizes:tachyons": "filesizes dist/css/palettes/tachyons/ > dist/css/palettes/tachyons/skeletonic-tachyons-report.txt",
        "// Skeletonic CSS Websafe Colors": " --- Development Scripts --- ",
        "dev:generate:websafe": "npm run dev:format:websafe && npm run dev:lint:websafe && npm run dev:create:websafe && npm run dev:prettier:websafe && npm run dev:autoprefixer:websafe && npm run dev:minimize:websafe && npm run dev:filesizes:websafe",
        "dev:format:websafe": "stylus-supremacy format ./src/stylus/palettes/websafe.styl --options .stylelintrc.json > ./debug/websafe-output.log &",
        "dev:lint:websafe": "stylint ./src/stylus/palettes/websafe.styl --strict --fix",
        "dev:create:websafe": "stylus ./src/stylus/palettes/websafe.styl -o ./dist/css/palettes/websafe/skeletonic-websafe.css",
        "dev:prettier:websafe": "prettier --write \"dist/css/palettes/websafe/skeletonic-websafe.css\" && stylelint \"dist/css/palettes/websafe/skeletonic-websafe.css\" --fix",
        "dev:autoprefixer:websafe": "postcss -u autoprefixer --verbose --no-map.inline --autoprefixer.browsers \"last 1 versions\" dist/css/palettes/websafe/skeletonic-websafe.css -r",
        "dev:minimize:websafe": "find dist/css/palettes/websafe/ -iname '*.css' -and -not -iname '*.min.css' -exec sh -c 'node_modules/csso-cli/bin/csso {} --stat --output ${0%.css}.min.css' {} \\;",
        "dev:filesizes:websafe": "filesizes dist/css/palettes/websafe/ > dist/css/palettes/websafe/skeletonic-websafe-report.txt",
        "// Skeletonic CSS Core": " --- Development Scripts --- ",
        "dev:generate:skeletonic": "npm run dev:format:skeletonic && npm run dev:lint:skeletonic && npm run dev:create:skeletonic && npm run dev:prettier:skeletonic && npm run dev:autoprefixer:skeletonic && npm run dev:minimize:skeletonic && npm run dev:filesizes:skeletonic",
        "dev:format:skeletonic": "stylus-supremacy format ./src/stylus/skeletonic.styl --options .stylelintrc.json > ./debug/core/skeletonic-output.log &",
        "dev:lint:skeletonic": "stylint ./src/stylus/skeletonic.styl --strict --fix",
        "dev:create:skeletonic": "stylus ./src/stylus/skeletonic.styl -o ./dist/css/core/skeletonic.css",
        "dev:prettier:skeletonic": "prettier --write \"dist/css/core/skeletonic.css\" && stylelint \"dist/css/core/skeletonic.css\" --fix",
        "dev:autoprefixer:skeletonic": "postcss -u autoprefixer --verbose --no-map.inline --autoprefixer.browsers \"last 1 versions\" dist/css/core/skeletonic.css -r",
        "dev:minimize:skeletonic": "find dist/css/core/ -iname '*.css' -and -not -iname '*.min.css' -exec sh -c 'node_modules/csso-cli/bin/csso {} --stat --output ${0%.css}.min.css' {} \\;",
        "dev:filesizes:skeletonic": "filesizes dist/css/core/ > dist/css/core/skeletonic-report.txt",
        "// Skeletonic CSS Maintenance": " --- Development Scripts --- ",
        "dev:clean:css": "foreach -g \"dist/css/*.css\" -x \"cleancss #{path} -o #{path}\" --no-c",
        "dev:clean:directory": "rimraf \"dist/css\"",
        "dev:copy:logo": "cp -R images/ dist/images/",
        "dev:copy:readme": "cp README.md dist/",
        "dev:copy:stylus": "cp -R src/stylus dist/",
        "dev:copyright:insert": "find src/stylus/**/* -name \"*.styl\" -exec sh -c \"cat COPYRIGHT.txt {} >> $$.tmp && mv $$.tmp {}\" \\;",
        "dev:filesizes:package": "filesizes dist/ > dist/filesize-report.txt",
        "dev:stylelint:check": "stylelint-config-prettier-check",
        "// Production": " --- Production Scripts --- ",
        "postpublish": "npm run publish-npm",
        "publish-npm": "npm publish --access public --ignore-scripts --@OWNER:registry='https://registry.npmjs.org'",
        "prepare:skeletonic:stylus": "npm run build",
        "publish:skeletonic:stylus": "npm publish $(node -p \"p=require('./package.json');p.name+'-'+p.version+'.tgz'\")",
        "test": "echo \"Who need tests anyway? ¯\\_(ツ)_/¯ \" && exit 0"
    },
    "devDependencies": {
        "autoprefixer": "^10.2.6",
        "clean-css-cli": "^5.3.0",
        "csso-cli": "^3.0.0",
        "cssstats-cli": "^4.0.2",
        "filesizes": "^0.1.2",
        "foreach-cli": "^1.8.1",
        "postcss": "^8.3.5",
        "postcss-cli": "^8.3.1",
        "postcss-sorting": "^6.0.0",
        "rimraf": "^3.0.2",
        "stylelint": "^13.13.1",
        "stylelint-a11y": "^1.2.3",
        "stylelint-config-prettier": "^8.0.2",
        "stylelint-config-rational-order": "^0.1.2",
        "stylelint-config-recommended": "^5.0.0",
        "stylelint-config-styled-components": "^0.1.1",
        "stylelint-high-performance-animation": "^1.5.2",
        "stylelint-order": "^4.1.0",
        "stylelint-prettier": "^1.2.0",
        "stylelint-processor-styled-components": "^1.10.0",
        "stylus": "^0.54.8",
        "stylus-supremacy": "^2.15.0",
        "tablemark-cli": "^2.0.0"
    },
    "dependencies": {
        "npm": "^7.19.1"
    },
    "pre-commit": "dev:lint:stylus"
}
